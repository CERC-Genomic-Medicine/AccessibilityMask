#!/usr/bin/env python

import argparse
import gzip
from contextlib import ExitStack
import pysam
from statistics import mean, median
import pandas as pd
import sys

argparser = argparse.ArgumentParser(description = 'This script compute summary statistics from depth files generated by coverage pipeline!')
argparser.add_argument('-i', '--input-file', metavar = 'file', dest = 'in_path', type = str, required = True, help = 'File containing coverage of each variant and percent of individuals having that variant with specified coverage.')
argparser.add_argument('-dp', '--min-dp', metavar = 'number', dest = 'in_depth', type = int, required = True, help = 'Minimum depth considering as high coverage threshold, must be one of the elements of following list [5X, 10X, 15X, 20X, 25X, 30X, 50X, 100X].')
argparser.add_argument('-o', '--output', metavar = 'file', dest = 'out_file_path', type = str, required = True, help = 'Output file containing statistics relating to mean coverage and specified depth threshold.')

def load_depth_data(path_read = '/path/to/depth/data', path_write = '/path/to/bed/file',  min_depth = "10X"):  
    column_name = f'PCT_INDV_OVER_{min_depth}'
    df = pd.read_csv(path_read, sep = '\t', usecols = ['MEAN', column_name], dtype = {'MEAN':np.float32, column_name:np.float32})
    summary = df.describe(percentiles = [0.001, 0.005, 0.01, .05, .1, .5, 0.25, 0.75, 0.95, 0.99, 0.995, 0.999, 1])
    summary = summary.drop(["min", "max"], axis = 0, inplace = True)
    summary.to_csv(path_write, sep = "\t")
    
if __name__ == "__main__":
    args = argparser.parse_args()
    depth_file = args.in_path
    min_depth = args.in_depth
    pct_ind = args.in_pct
    out_file_path = args.out_file_path
    load_coverage_data(path_read = depth_file, path_write = out_file_path, min_depth = min_depth, min_percent = min_percent)
    exit() 